{"ast":null,"code":"var _jsxFileName = \"/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeGenerator.js\",\n  _s = $RefreshSig$();\n// import React, {Component} from \"react\";\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeGenerator() {\n  _s();\n  const [memeData, setMemeData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:9292/memes\").then(res => res.json()).then(data => setMemeData(data));\n  }, []);\n  console.log(memeData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n// class MemeGenerator extends Component {\n//     constructor(){\n//         super()\n//         this.state = {\n//             topText: \"\",\n//             bottomText:\"\",\n//             randomImg: \"https://i.imgflip.com/261o3j.jpg\",\n//             allMemeImgs: []\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//     }\n//     componentDidMount() {\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(response => response.json())\n//             .then(response => {\n//                 const {memes} = response.memes\n//                 console.log(\"Hi\")\n//                 console.log(memes)\n//                 this.setState({allMemeImgs: memes})\n//             })\n//     }\n//     handleChange(event){\n//          console.log(\"working!\")\n//         const {name, value} = event.target\n//         this.setState({[name]: value})\n//     }\n//     handleSubmit(event){\n//         event.preventDefault()\n//         const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n//         const randMemeImg = this.state.allMemeImgs[randNum].url\n//         this.setState({ randomImg: randMemeImg})\n//     }\n//     render(){\n//         return(\n//              <div>\n//                 <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n//                     <input\n//                         type = \"text\"\n//                         name = \"topText\"\n//                         placeholder=\"Top Text\"\n//                         value = {this.state.topText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <input\n//                         type = \"text\"\n//                         name = \"bottomText\"\n//                         placeholder=\"Bottom Text\"\n//                         value = {this.state.bottomText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <button>Generate</button>\n//                 </form>\n//                 <div className=\"meme\">\n//                     <img src={this.state.randomImg} alt=\"\"/>\n//                     <h2 className=\"top\">{this.state.topText}</h2>\n//                     <h2 className=\"bottom\">{this.state.bottomText}</h2>\n//                 </div>\n//              </div>\n//         )\n//     }\n// }\n_s(MemeGenerator, \"7v0sK4bbuOuF0q00T1EVMnqI4I4=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MemeGenerator","_s","memeData","setMemeData","fetch","then","res","json","data","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeGenerator.js"],"sourcesContent":["// import React, {Component} from \"react\";\n\nimport React, { useEffect, useState } from 'react'\n\nfunction MemeGenerator() {\n    const [memeData, setMemeData] = useState([])\n    useEffect(()=>{\n        fetch(\"http://127.0.0.1:9292/memes\")\n            .then(res => res.json())\n            .then(data => setMemeData(data))\n    },[])\n\n    console.log(memeData)\n  return (\n    <div>\n\n    </div>\n  )\n}\n\n\n// class MemeGenerator extends Component {\n//     constructor(){\n//         super()\n//         this.state = {\n//             topText: \"\",\n//             bottomText:\"\",\n//             randomImg: \"https://i.imgflip.com/261o3j.jpg\",\n//             allMemeImgs: []\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//     }\n//     componentDidMount() {\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(response => response.json())\n//             .then(response => {\n//                 const {memes} = response.memes\n//                 console.log(\"Hi\")\n//                 console.log(memes)\n//                 this.setState({allMemeImgs: memes})\n//             })\n//     }\n//     handleChange(event){\n//          console.log(\"working!\")\n//         const {name, value} = event.target\n//         this.setState({[name]: value})\n//     }\n//     handleSubmit(event){\n//         event.preventDefault()\n//         const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n//         const randMemeImg = this.state.allMemeImgs[randNum].url\n//         this.setState({ randomImg: randMemeImg})\n//     }\n//     render(){\n//         return(\n//              <div>\n//                 <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n//                     <input\n//                         type = \"text\"\n//                         name = \"topText\"\n//                         placeholder=\"Top Text\"\n//                         value = {this.state.topText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <input\n//                         type = \"text\"\n//                         name = \"bottomText\"\n//                         placeholder=\"Bottom Text\"\n//                         value = {this.state.bottomText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <button>Generate</button>\n//                 </form>\n//                 <div className=\"meme\">\n//                     <img src={this.state.randomImg} alt=\"\"/>\n//                     <h2 className=\"top\">{this.state.topText}</h2>\n//                     <h2 className=\"bottom\">{this.state.bottomText}</h2>\n//                 </div>\n//              </div>\n//         )\n//     }\n// }\nexport default MemeGenerator"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5CD,SAAS,CAAC,MAAI;IACVQ,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC;EACxC,CAAC,EAAC,EAAE,CAAC;EAELC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;EACvB,oBACEH,OAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEV;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAb,EAAA,CA9ESD,aAAa;AAAAe,EAAA,GAAbf,aAAa;AA+EtB,eAAeA,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}