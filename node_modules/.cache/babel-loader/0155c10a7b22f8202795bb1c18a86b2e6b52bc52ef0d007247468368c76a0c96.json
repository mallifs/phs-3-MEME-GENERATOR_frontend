{"ast":null,"code":"var _jsxFileName = \"/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/Meme.js\";\nimport React from 'react';\nimport MemeGenerator from 'react-meme-generator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = _ref => {\n  let {\n    meme\n  } = _ref;\n  const {\n    image_url,\n    top_text,\n    bottom_text\n  } = meme;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MemeGenerator, {\n      image: image_url,\n      topText: top_text,\n      bottomText: bottom_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Meme;\nexport default Meme;\n\n// // import React, {Component} from \"react\";\n\n// import React, { useEffect, useState } from 'react'\n\n// function MemeGenerator() {\n//     const [memeData, setMemeData] = useState([])\n//     const [text, setText] = useState({\n//         topText: '',\n//         bottomText: '',\n//         randomImg: \"https://i.imgflip.com/261o3j.jpg\"\n\n//     })\n//     useEffect(()=>{\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(res => res.json())\n//             .then(data => setMemeData(data))\n//     },[])\n\n//     console.log(memeData)\n\n//     function handleTop(event){\n//         // console.log(\"working!\")\n//         setText({...text, topText: event.target.value})\n//     }\n//     function handleBottom(event){\n//         // console.log(\"working!\")\n//         setText({...text, bottomText: event.target.value})\n//     }\n\n//     function handleSubmit(event){\n//         event.preventDefault()\n//         console.log(\"working\");\n//         const randNum = Math.floor(Math.random() *  memeData.length)\n//         const randMemeImg =  memeData[randNum].url\n//         setText({ randomImg: randMemeImg})\n//     }\n\n//     // function randNum(){\n//     //     return(Math.floor(Math.random() * 15) + 1)\n//     // }\n\n//     return (\n//         <>\n//             <form className=\"meme-form\" onSubmit={handleSubmit}>\n//                 <input\n//                     type = \"text\"\n//                     name = \"topText\"\n//                     placeholder=\"Top Text\"\n//                     value = {text.topText}\n//                     onChange = {handleTop}\n//                 />\n//                 <input\n//                     type = \"text\"\n//                     name = \"bottomText\"\n//                     placeholder=\"Bottom Text\"\n//                     value = {text.bottomText}\n//                     onChange = {handleBottom}\n//                 />\n//                 <button>Generate</button>\n//                 {/* <h1>{randNum()}</h1> */}\n\n//             </form>\n\n//           <div className='meme'>\n//             <img src={memeData.url} alt = \"\"/>\n\n//             <h2 className=\"top\">{text.topText}</h2>\n\n//             <h2 className=\"bottom\">{text.bottomText}</h2>\n//           </div>\n\n//         </>\n//     )\n// }\n\n// export default MemeGenerator\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","MemeGenerator","jsxDEV","_jsxDEV","Meme","_ref","meme","image_url","top_text","bottom_text","children","image","topText","bottomText","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/Meme.js"],"sourcesContent":["import React from 'react';\nimport MemeGenerator from 'react-meme-generator';\n\nconst Meme = ({ meme }) => {\n  const { image_url, top_text, bottom_text } = meme;\n\n  return (\n    <div>\n      <MemeGenerator\n        image={image_url}\n        topText={top_text}\n        bottomText={bottom_text}\n      />\n    </div>\n  );\n};\n\nexport default Meme;\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React, {Component} from \"react\";\n\n// import React, { useEffect, useState } from 'react'\n\n// function MemeGenerator() {\n//     const [memeData, setMemeData] = useState([])\n//     const [text, setText] = useState({\n//         topText: '',\n//         bottomText: '',\n//         randomImg: \"https://i.imgflip.com/261o3j.jpg\"\n         \n//     })\n//     useEffect(()=>{\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(res => res.json())\n//             .then(data => setMemeData(data))\n//     },[])\n\n//     console.log(memeData)\n\n\n//     function handleTop(event){\n//         // console.log(\"working!\")\n//         setText({...text, topText: event.target.value})\n//     }\n//     function handleBottom(event){\n//         // console.log(\"working!\")\n//         setText({...text, bottomText: event.target.value})\n//     }\n\n//     function handleSubmit(event){\n//         event.preventDefault()\n//         console.log(\"working\");\n//         const randNum = Math.floor(Math.random() *  memeData.length)\n//         const randMemeImg =  memeData[randNum].url\n//         setText({ randomImg: randMemeImg})\n//     }\n\n//     // function randNum(){\n//     //     return(Math.floor(Math.random() * 15) + 1)\n//     // }\n\n//     return (\n//         <>\n//             <form className=\"meme-form\" onSubmit={handleSubmit}>\n//                 <input\n//                     type = \"text\"\n//                     name = \"topText\"\n//                     placeholder=\"Top Text\"\n//                     value = {text.topText}\n//                     onChange = {handleTop}\n//                 />\n//                 <input\n//                     type = \"text\"\n//                     name = \"bottomText\"\n//                     placeholder=\"Bottom Text\"\n//                     value = {text.bottomText}\n//                     onChange = {handleBottom}\n//                 />\n//                 <button>Generate</button>\n//                 {/* <h1>{randNum()}</h1> */}\n                \n\n\n           \n//             </form>\n\n            \n//           <div className='meme'>\n//             <img src={memeData.url} alt = \"\"/>\n\n//             <h2 className=\"top\">{text.topText}</h2>\n\n//             <h2 className=\"bottom\">{text.bottomText}</h2>\n//           </div>\n        \n//         </>\n//     )\n// }\n\n \n// export default MemeGenerator"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EACpB,MAAM;IAAEE,SAAS;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGH,IAAI;EAEjD,oBACEH,OAAA;IAAAO,QAAA,eACEP,OAAA,CAACF,aAAa;MACZU,KAAK,EAAEJ,SAAU;MACjBK,OAAO,EAAEJ,QAAS;MAClBK,UAAU,EAAEJ;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACC,EAAA,GAZId,IAAI;AAcV,eAAeA,IAAI;;AAcnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}