{"ast":null,"code":"var _jsxFileName = \"/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Meme from './Meme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeList = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    const fetchMemes = async () => {\n      try {\n        const res = await axios.get('/memes');\n        setMemes(res.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMemes();\n  }, []);\n  const handleMemeSubmit = newMeme => {\n    setMemes([...memes, newMeme]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemeForm, {\n      onMemeSubmit: handleMemeSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), memes.map(meme => /*#__PURE__*/_jsxDEV(Meme, {\n      meme: meme\n    }, meme.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeList, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n_c = MemeList;\nexport default MemeList;\nvar _c;\n$RefreshReg$(_c, \"MemeList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Meme","jsxDEV","_jsxDEV","MemeList","_s","memes","setMemes","fetchMemes","res","get","data","error","console","handleMemeSubmit","newMeme","children","fileName","_jsxFileName","lineNumber","columnNumber","MemeForm","onMemeSubmit","map","meme","id","_c","$RefreshReg$"],"sources":["/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Meme from './Meme';\n\nconst MemeList = () => {\n  const [memes, setMemes] = useState([]);\n\n  useEffect(() => {\n    const fetchMemes = async () => {\n      try {\n        const res = await axios.get('/memes');\n        setMemes(res.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMemes();\n  }, []);\n\n  const handleMemeSubmit = (newMeme) => {\n    setMemes([...memes, newMeme]);\n  };\n\n  return (\n    <div>\n      <h1>Meme Generator</h1>\n      <MemeForm onMemeSubmit={handleMemeSubmit} />\n      {memes.map((meme) => (\n        <Meme key={meme.id} meme={meme} />\n      ))}\n    </div>\n  );\n};\n\nexport default MemeList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,QAAQ,CAAC;QACrCH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDJ,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAIC,OAAO,IAAK;IACpCR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAES,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBjB,OAAA,CAACkB,QAAQ;MAACC,YAAY,EAAER;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAC3Cd,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACdrB,OAAA,CAACF,IAAI;MAAeuB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACf,EAAA,CA5BID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}