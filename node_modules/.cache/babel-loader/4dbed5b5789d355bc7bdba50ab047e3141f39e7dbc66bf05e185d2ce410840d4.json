{"ast":null,"code":"var _jsxFileName = \"/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeGenerator.js\",\n  _s = $RefreshSig$();\n// import React, {Component} from \"react\";\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MemeGenerator() {\n  _s();\n  const [memeData, setMemeData] = useState([]);\n  const [text, setText] = useState({\n    topText: '',\n    bottomText: '',\n    randomImg: \"https://i.imgflip.com/261o3j.jpg\"\n  });\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:9292/memes\").then(res => res.json()).then(data => setMemeData(data));\n  }, []);\n  console.log(memeData);\n  function handleTop(event) {\n    // console.log(\"working!\")\n    setText({\n      ...text,\n      topText: event.target.value\n    });\n  }\n  function handleBottom(event) {\n    // console.log(\"working!\")\n    setText({\n      ...text,\n      bottomText: event.target.value\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    // console.log(\"working\");\n    // const randNum = Math.floor(Math.random() *  memeData.length)\n    // const randMemeImg =  memeData[randNum].url\n    // setText({ randomImg: randMemeImg})\n  }\n\n  function randNum() {\n    return Math.floor(Math.random() * 15) + 1;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"meme-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"Top Text\",\n        value: text.topText,\n        onChange: handleTop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom Text\",\n        value: text.bottomText,\n        onChange: handleBottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: randNum()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"top\",\n        children: text.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bottom\",\n        children: text.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(MemeGenerator, \"cejEnCZhJ2KLoaxS+11oktggJK8=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MemeGenerator","_s","memeData","setMemeData","text","setText","topText","bottomText","randomImg","fetch","then","res","json","data","console","log","handleTop","event","target","value","handleBottom","handleSubmit","preventDefault","randNum","Math","floor","random","children","className","onSubmit","type","name","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeGenerator.js"],"sourcesContent":["// import React, {Component} from \"react\";\n\nimport React, { useEffect, useState } from 'react'\n\nfunction MemeGenerator() {\n    const [memeData, setMemeData] = useState([])\n    const [text, setText] = useState({\n        topText: '',\n        bottomText: '',\n        randomImg: \"https://i.imgflip.com/261o3j.jpg\"\n         \n    })\n    useEffect(()=>{\n        fetch(\"http://127.0.0.1:9292/memes\")\n            .then(res => res.json())\n            .then(data => setMemeData(data))\n    },[])\n\n    console.log(memeData)\n\n\n    function handleTop(event){\n        // console.log(\"working!\")\n        setText({...text, topText: event.target.value})\n    }\n    function handleBottom(event){\n        // console.log(\"working!\")\n        setText({...text, bottomText: event.target.value})\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        // console.log(\"working\");\n        // const randNum = Math.floor(Math.random() *  memeData.length)\n        // const randMemeImg =  memeData[randNum].url\n        // setText({ randomImg: randMemeImg})\n    }\n\n    function randNum(){\n        return(Math.floor(Math.random() * 15) + 1)\n    }\n\n    return (\n        <>\n            <form className=\"meme-form\" onSubmit={handleSubmit}>\n                <input\n                    type = \"text\"\n                    name = \"topText\"\n                    placeholder=\"Top Text\"\n                    value = {text.topText}\n                    onChange = {handleTop}\n                />\n                <input\n                    type = \"text\"\n                    name = \"bottomText\"\n                    placeholder=\"Bottom Text\"\n                    value = {text.bottomText}\n                    onChange = {handleBottom}\n                />\n                <button>Generate</button>\n                <h1>{randNum()}</h1>\n                \n\n\n           \n            </form>\n\n            {/* <div className=\"meme\">\n                     <img src={memeData[randNum].url} alt=\"img\"/>\n\n                     <h2 className=\"top\">{text.topText}</h2>\n\n                     <h2 className=\"bottom\">{text.bottomText}</h2>\n                 </div> */}\n          <div className=''>\n\n            <h2 className=\"top\">{text.topText}</h2>\n\n            <h2 className=\"bottom\">{text.bottomText}</h2>\n          </div>\n        \n        </>\n    )\n}\n\n \nexport default MemeGenerator"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}