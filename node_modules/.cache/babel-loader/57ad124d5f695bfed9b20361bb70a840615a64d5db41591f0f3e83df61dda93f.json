{"ast":null,"code":"var _jsxFileName = \"/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeForm = _ref => {\n  _s();\n  let {\n    onMemeSubmit\n  } = _ref;\n  const [image, setImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('top_text', topText);\n    formData.append('bottom_text', bottomText);\n    try {\n      const res = await axios.post('/memes', formData);\n      onMemeSubmit(res.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setImage(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Top Text\",\n      value: topText,\n      onChange: e => setTopText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Bottom Text\",\n      value: bottomText,\n      onChange: e => setBottomText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeForm, \"kYOebPJRIH8T30aDU2LQUVKXJBU=\");\n_c = MemeForm;\nexport default MemeForm;\nvar _c;\n$RefreshReg$(_c, \"MemeForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MemeForm","_ref","_s","onMemeSubmit","image","setImage","topText","setTopText","bottomText","setBottomText","handleSubmit","e","preventDefault","formData","FormData","append","res","post","data","error","console","onSubmit","children","type","onChange","target","files","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","_c","$RefreshReg$"],"sources":["/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MemeForm = ({ onMemeSubmit }) => {\n  const [image, setImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('top_text', topText);\n    formData.append('bottom_text', bottomText);\n    try {\n      const res = await axios.post('/memes', formData);\n      onMemeSubmit(res.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n      <input\n        type=\"text\"\n        placeholder=\"Top Text\"\n        value={topText}\n        onChange={(e) => setTopText(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Bottom Text\"\n        value={bottomText}\n        onChange={(e) => setBottomText(e.target.value)}\n      />\n      <button type=\"submit\">Create Meme</button>\n    </form>\n  );\n};\n\nexport default MemeForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,KAAK,CAAC;IAC/BS,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAET,OAAO,CAAC;IACpCO,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEP,UAAU,CAAC;IAC1C,IAAI;MACF,MAAMQ,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,QAAQ,EAAEJ,QAAQ,CAAC;MAChDV,YAAY,CAACa,GAAG,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEpB,OAAA;IAAMsB,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBAC3BvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGb,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACnE/B,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXQ,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE1B,OAAQ;MACfkB,QAAQ,EAAGb,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACc,MAAM,CAACO,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C,eACF/B,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXQ,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAExB,UAAW;MAClBgB,QAAQ,EAAGb,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACc,MAAM,CAACO,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/C,eACF/B,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrC;AAEX,CAAC;AAAC5B,EAAA,CArCIF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}