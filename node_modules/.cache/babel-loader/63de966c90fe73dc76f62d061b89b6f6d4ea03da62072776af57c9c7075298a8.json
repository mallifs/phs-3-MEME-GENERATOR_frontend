{"ast":null,"code":"// import React, {Component} from \"react\";\n\n// import React, { useEffect, useState } from 'react'\n\n// function MemeGenerator() {\n//     const [memeData, setMemeData] = useState([])\n//     const [text, setText] = useState({\n//         topText: '',\n//         bottomText: '',\n//         randomImg: \"https://i.imgflip.com/261o3j.jpg\"\n\n//     })\n//     useEffect(()=>{\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(res => res.json())\n//             .then(data => setMemeData(data))\n//     },[])\n\n//     console.log(memeData)\n\n//     function handleTop(event){\n//         // console.log(\"working!\")\n//         setText({...text, topText: event.target.value})\n//     }\n//     function handleBottom(event){\n//         // console.log(\"working!\")\n//         setText({...text, bottomText: event.target.value})\n//     }\n\n//     function handleSubmit(event){\n//         event.preventDefault()\n//         // console.log(\"working\");\n//         const randNum = Math.floor(Math.random() *  memeData.length)\n//         const randMemeImg =  memeData[randNum].url\n//         setText({ randomImg: randMemeImg})\n//     }\n\n//     // // function randNum(){\n//     //     return(Math.floor(Math.random() * 15) + 1)\n//     // }\n\n//     return (\n//         <>\n//             <form className=\"meme-form\" onSubmit={handleSubmit}>\n//                 <input\n//                     type = \"text\"\n//                     name = \"topText\"\n//                     placeholder=\"Top Text\"\n//                     value = {text.topText}\n//                     onChange = {handleTop}\n//                 />\n//                 <input\n//                     type = \"text\"\n//                     name = \"bottomText\"\n//                     placeholder=\"Bottom Text\"\n//                     value = {text.bottomText}\n//                     onChange = {handleBottom}\n//                 />\n//                 <button>Generate</button>\n\n//             </form>\n\n//             <div className=\"meme\">\n//                      <img src={memeData.url} alt=\"img\"/>\n\n//                      <h2 className=\"top\">{text.topText}</h2>\n\n//                      <h2 className=\"bottom\">{text.bottomText}</h2>\n//                  </div>\n\n//         </>\n//     )\n// }\n\n// class MemeGenerator extends Component {\n//     constructor(){\n//         super()\n//         this.state = {\n//             topText: \"\",\n//             bottomText:\"\",\n//             randomImg: \"https://i.imgflip.com/261o3j.jpg\",\n//             allMemeImgs: []\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//     }\n//     componentDidMount() {\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(response => response.json())\n//             .then(response => {\n//                 const {memes} = response.memes\n//                 console.log(\"Hi\")\n//                 console.log(memes)\n//                 this.setState({allMemeImgs: memes})\n//             })\n//     }\n//     handleChange(event){\n//          console.log(\"working!\")\n//         const {name, value} = event.target\n//         this.setState({[name]: value})\n//     }\n//     handleSubmit(event){\n//         event.preventDefault()\n//         const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n//         const randMemeImg = this.state.allMemeImgs[randNum].url\n//         this.setState({ randomImg: randMemeImg})\n//     }\n//     render(){\n//         return(\n//              <div>\n//                 <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n//                     <input\n//                         type = \"text\"\n//                         name = \"topText\"\n//                         placeholder=\"Top Text\"\n//                         value = {this.state.topText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <input\n//                         type = \"text\"\n//                         name = \"bottomText\"\n//                         placeholder=\"Bottom Text\"\n//                         value = {this.state.bottomText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <button>Generate</button>\n//                 </form>\n//                 <div className=\"meme\">\n//                     <img src={this.state.randomImg} alt=\"\"/>\n//                     <h2 className=\"top\">{this.state.topText}</h2>\n//                     <h2 className=\"bottom\">{this.state.bottomText}</h2>\n//                 </div>\n//              </div>\n//         )\n//     }\n// }\nexport default MemeGenerator;","map":{"version":3,"names":["MemeGenerator"],"sources":["/home/leo/MoringaSchool/phs-3/phs-3-MEME-GENERATOR_frontend/src/MemeGenerator.js"],"sourcesContent":["// import React, {Component} from \"react\";\n\n// import React, { useEffect, useState } from 'react'\n\n// function MemeGenerator() {\n//     const [memeData, setMemeData] = useState([])\n//     const [text, setText] = useState({\n//         topText: '',\n//         bottomText: '',\n//         randomImg: \"https://i.imgflip.com/261o3j.jpg\"\n         \n//     })\n//     useEffect(()=>{\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(res => res.json())\n//             .then(data => setMemeData(data))\n//     },[])\n\n//     console.log(memeData)\n\n\n//     function handleTop(event){\n//         // console.log(\"working!\")\n//         setText({...text, topText: event.target.value})\n//     }\n//     function handleBottom(event){\n//         // console.log(\"working!\")\n//         setText({...text, bottomText: event.target.value})\n//     }\n\n//     function handleSubmit(event){\n//         event.preventDefault()\n//         // console.log(\"working\");\n//         const randNum = Math.floor(Math.random() *  memeData.length)\n//         const randMemeImg =  memeData[randNum].url\n//         setText({ randomImg: randMemeImg})\n//     }\n\n//     // // function randNum(){\n//     //     return(Math.floor(Math.random() * 15) + 1)\n//     // }\n\n//     return (\n//         <>\n//             <form className=\"meme-form\" onSubmit={handleSubmit}>\n//                 <input\n//                     type = \"text\"\n//                     name = \"topText\"\n//                     placeholder=\"Top Text\"\n//                     value = {text.topText}\n//                     onChange = {handleTop}\n//                 />\n//                 <input\n//                     type = \"text\"\n//                     name = \"bottomText\"\n//                     placeholder=\"Bottom Text\"\n//                     value = {text.bottomText}\n//                     onChange = {handleBottom}\n//                 />\n//                 <button>Generate</button>\n                \n\n\n           \n//             </form>\n\n//             <div className=\"meme\">\n//                      <img src={memeData.url} alt=\"img\"/>\n\n//                      <h2 className=\"top\">{text.topText}</h2>\n\n//                      <h2 className=\"bottom\">{text.bottomText}</h2>\n//                  </div>\n          \n        \n//         </>\n//     )\n// }\n\n\n// class MemeGenerator extends Component {\n//     constructor(){\n//         super()\n//         this.state = {\n//             topText: \"\",\n//             bottomText:\"\",\n//             randomImg: \"https://i.imgflip.com/261o3j.jpg\",\n//             allMemeImgs: []\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//     }\n//     componentDidMount() {\n//         fetch(\"http://127.0.0.1:9292/memes\")\n//             .then(response => response.json())\n//             .then(response => {\n//                 const {memes} = response.memes\n//                 console.log(\"Hi\")\n//                 console.log(memes)\n//                 this.setState({allMemeImgs: memes})\n//             })\n//     }\n//     handleChange(event){\n//          console.log(\"working!\")\n//         const {name, value} = event.target\n//         this.setState({[name]: value})\n//     }\n//     handleSubmit(event){\n//         event.preventDefault()\n//         const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n//         const randMemeImg = this.state.allMemeImgs[randNum].url\n//         this.setState({ randomImg: randMemeImg})\n//     }\n//     render(){\n//         return(\n//              <div>\n//                 <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n//                     <input\n//                         type = \"text\"\n//                         name = \"topText\"\n//                         placeholder=\"Top Text\"\n//                         value = {this.state.topText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <input\n//                         type = \"text\"\n//                         name = \"bottomText\"\n//                         placeholder=\"Bottom Text\"\n//                         value = {this.state.bottomText}\n//                         onChange = {this.handleChange}\n//                     />\n//                     <button>Generate</button>\n//                 </form>\n//                 <div className=\"meme\">\n//                     <img src={this.state.randomImg} alt=\"\"/>\n//                     <h2 className=\"top\">{this.state.topText}</h2>\n//                     <h2 className=\"bottom\">{this.state.bottomText}</h2>\n//                 </div>\n//              </div>\n//         )\n//     }\n// }\nexport default MemeGenerator"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}